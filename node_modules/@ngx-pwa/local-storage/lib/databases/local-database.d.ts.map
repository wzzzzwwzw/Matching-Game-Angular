{"version":3,"file":"local-database.d.ts","sources":["local-database.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Observable } from 'rxjs';\n/**\n * Factory to create a storage according to browser support\n * @param platformId Context about the platform (`browser`, `server`...)\n * @param LSPrefix Prefix for `localStorage` keys to avoid collision for multiple apps on the same subdomain\n * @param IDBDBName `indexedDB` database name\n * @param IDBstoreName `indexedDB` storeName name\n * @see {@link https://github.com/cyrilletuzi/angular-async-local-storage/blob/main/docs/BROWSERS_SUPPORT.md}\n */\nexport declare function localDatabaseFactory(platformId: string, LSPrefix: string, IDBDBName: string, IDBStoreName: string, IDBDBVersion: number, IDBNoWrap: boolean): LocalDatabase;\nexport declare abstract class LocalDatabase {\n    abstract readonly size: Observable<number>;\n    abstract get(key: string): Observable<unknown | undefined>;\n    abstract set(key: string, data: unknown): Observable<undefined>;\n    abstract delete(key: string): Observable<undefined>;\n    abstract clear(): Observable<undefined>;\n    abstract keys(): Observable<string>;\n    abstract has(key: string): Observable<boolean>;\n}\n"]}